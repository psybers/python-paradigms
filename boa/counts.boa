REVS: output sum[string] of int;
FILES: output sum[string] of int;
PPL: output sum[string] of int;
STMTS: output sum[string] of int;
AST: output sum[string] of int;

has_source_file := false;

visit(input, visitor {
	before cr: CodeRepository -> {
		cnt := getrevisionscount(cr);
		for (i := 0; !has_source_file && i < cnt; i++) {
			rev := getrevision(cr, i);
			foreach (j: int; !has_source_file && rev.files[j].kind != FileKind.SOURCE_PY_ERROR && iskind("SOURCE_PY_", rev.files[j].kind))
				has_source_file = true;
		}
		stop;
	}
});

if (has_source_file) {
	revs := 0;
	files := 0;
	stmts := 0;
	asts := 0;
	names: set of string;

	visit(input, visitor {
		before Revision -> revs += 1;
		before p: Person -> add(names, p.username);
		before cf: ChangedFile ->
			if (cf.kind == FileKind.SOURCE_PY_ERROR || !iskind("SOURCE_PY_", cf.kind))
				stop;
		before ASTRoot -> files += 1;
		after Statement -> {
			stmts += 1;
			asts += 1;
		}
		before _ -> asts += 1;
	});

	REVS[input.project_url] << revs;
	FILES[input.project_url] << files;
	PPL[input.project_url] << len(names);
	STMTS[input.project_url] << stmts;
	AST[input.project_url] << asts;
}